---
layout: base.njk
title: "Photo Gallery"
description: "Historical and contemporary photographs of Templecurraheen Graveyard"
---

<style>
.poem-container {
    max-height: 60vh;
    overflow-y: auto;
    padding-right: 8px;
}

.stanza {
    border-left: 2px solid rgba(255, 255, 255, 0.2);
    padding-left: 12px;
    margin-bottom: 16px;
}

.stanza-number {
    font-weight: 600;
    color: rgba(255, 255, 255, 0.6);
    display: inline-block;
    min-width: 20px;
}

.poem-line {
    margin-bottom: 4px;
    text-indent: 20px;
}

.stanza-1 .poem-line:first-child {
    font-weight: 600;
    color: rgba(255, 255, 255, 0.9);
}

.stanza-4 .poem-line {
    color: rgba(255, 255, 255, 0.8);
    font-style: italic;
}

.stanza-7 .poem-line {
    color: rgba(255, 255, 255, 0.85);
}

.stanza-9 .poem-line {
    font-weight: 500;
    color: rgba(255, 255, 255, 0.95);
}

/* Custom scrollbar for poem container */
.poem-container::-webkit-scrollbar {
    width: 6px;
}

.poem-container::-webkit-scrollbar-track {
    background: rgba(255, 255, 255, 0.1);
    border-radius: 3px;
}

.poem-container::-webkit-scrollbar-thumb {
    background: rgba(255, 255, 255, 0.3);
    border-radius: 3px;
}

.poem-container::-webkit-scrollbar-thumb:hover {
    background: rgba(255, 255, 255, 0.5);
}

.poem-preview {
    display: none !important;
}

/* Lightbox poem styling */
#lightbox .poem-container {
    max-height: 60vh;
    overflow-y: auto;
    padding-right: 8px;
}

#lightbox .stanza {
    border-left: 2px solid rgba(255, 255, 255, 0.2);
    padding-left: 12px;
    margin-bottom: 16px;
}

#lightbox .stanza-number {
    font-weight: 600;
    color: rgba(255, 255, 255, 0.6);
    display: inline-block;
    min-width: 20px;
}

#lightbox .poem-line {
    margin-bottom: 4px;
    text-indent: 20px;
    font-size: 14px;
    line-height: 1.6;
}
</style>

<div class="mb-8">
    <h1 class="text-3xl font-serif mb-4">Photo Gallery</h1>
    <p class="text-stone-600 dark:text-gray-300 mb-6">
        A visual record of Templecurraheen Graveyard, featuring historical photographs, headstone documentation, and general views of the cemetery.
    </p>
    
    <div class="grid grid-cols-2 lg:flex lg:flex-wrap gap-2 sm:gap-4 mb-6">
        <button onclick="filterImages('all')" class="btn btn-primary filter-btn active text-sm sm:text-base" data-filter="all">All Photos</button>
        <button onclick="filterImages('headstones')" class="btn btn-secondary filter-btn text-sm sm:text-base" data-filter="headstones">Headstones</button>
        <button onclick="filterImages('general')" class="btn btn-secondary filter-btn text-sm sm:text-base" data-filter="general">General Views</button>
        <button onclick="filterImages('historical')" class="btn btn-secondary filter-btn text-sm sm:text-base" data-filter="historical">Historical</button>
    </div>
</div>

<div id="galleryGrid" class="gallery-grid">
    {% for image in gallery.images %}
    <div class="masonry-item gallery-item" data-category="{{ image.category }}" data-title="{{ image.title | lower }}">
        <div class="aspect-w-4 aspect-h-3">
            <img src="{{ image.src | url }}" 
                 alt="{{ image.alt }}" 
                 class="w-full h-40 sm:h-48 object-cover cursor-pointer hover:opacity-90 transition-opacity" 
                 loading="lazy"
                 data-title="{{ image.title }}"
                 data-description="{{ image.description }}"
                 data-date="{{ image.date }}"
                 {% if image.customContent %}
                 data-poem-author="{{ image.customContent.author }}"
                 data-poem-stanzas="{{ image.customContent.stanzas | stringify | safe }}"
                 {% endif %}
                 onclick="openLightbox(this)">
        </div>
        <div class="p-4">
            <h3 class="font-medium text-stone-800 dark:text-white mb-2">{{ image.title }}</h3>
            {% if image.customContent and image.customContent.type == 'poem' %}
            <p class="text-sm text-stone-600 dark:text-gray-300 mb-2 italic">A poem by {{ image.customContent.author }}</p>
            <div class="poem-preview hidden" id="poem-{{ image.title | slug }}">
                <div class="poem-container text-xs">
                    <p class="text-sm text-gray-400 mb-2 italic">A poem by {{ image.customContent.author }}</p>
                    {% for stanza in image.customContent.stanzas %}
                    <div class="stanza stanza-{{ stanza.number }} mb-2">
                        <span class="stanza-number text-xs text-gray-500 mr-1">{{ stanza.number }}</span>
                        {% for line in stanza.text.split('\n') %}
                        {% if line.trim() %}
                        <div class="poem-line text-xs leading-tight">{{ line }}</div>
                        {% endif %}
                        {% endfor %}
                    </div>
                    {% endfor %}
                </div>
            </div>
            {% elif image.description %}
            <p class="text-sm text-stone-600 dark:text-gray-300 mb-2">{{ image.description }}</p>
            {% endif %}
            {% if image.date %}
            <p class="text-xs text-stone-400 dark:text-gray-400">{{ image.date }}</p>
            {% endif %}
            {% if image.graveReference %}
            <a href="{{ '/graves/' + image.graveReference + '/' | url }}" class="text-stone-700 hover:text-stone-900 dark:text-purple-400 dark:hover:text-purple-300 text-sm transition-colors">
                View burial record →
            </a>
            {% endif %}
        </div>
    </div>
    {% endfor %}
</div>

<!-- Enhanced Lightbox Modal -->
<div id="lightbox" class="fixed inset-0 bg-black bg-opacity-90 hidden z-50 flex items-center justify-center p-4" onclick="closeLightbox()">
    <div class="relative max-w-6xl max-h-full w-full h-full flex flex-col">
        <!-- Close Button -->
        <button onclick="closeLightbox()" 
                class="absolute top-4 right-4 z-10 text-white hover:text-gray-300 transition-colors bg-black bg-opacity-50 rounded-full w-10 h-10 flex items-center justify-center text-2xl font-bold">
            ×
        </button>
        
        <!-- Image Container - Reduced max height to leave room for caption -->
        <div class="flex-1 flex items-center justify-center min-h-0">
            <img id="lightboxImage" 
                 src="" 
                 alt="" 
                 class="max-w-full max-h-[70vh] object-contain rounded-lg shadow-2xl">
        </div>
        
        <!-- Caption Container - Always visible at bottom -->
        <div id="lightboxCaption" class="bg-black bg-opacity-75 text-white p-6 rounded-lg mt-4 max-w-full min-h-[120px] flex flex-col justify-center">
            <h3 id="lightboxTitle" class="text-xl font-serif mb-2"></h3>
            <div id="lightboxContent" class="text-gray-200 mb-2 leading-relaxed"></div>
            <p id="lightboxDate" class="text-sm text-gray-400"></p>
        </div>
    </div>
</div>

<div class="mt-12 bg-stone-100 dark:bg-gray-800 rounded-lg p-6">
    <h2 class="text-xl font-serif mb-4">Contribute Photographs</h2>
    <p class="text-stone-600 dark:text-gray-300 mb-4">
        Do you have historical photographs of Templecurraheen Graveyard or specific headstones? 
        We'd love to include them in our archive to preserve this visual history.
    </p>
    <div class="flex gap-4">
        <a href="mailto:contact@example.com?subject=Photo Contribution" class="btn btn-primary">
            Email Photos
        </a>
        <a href="https://github.com/duinneacha/templecurraheen-website/issues" class="btn btn-secondary">
            Submit via GitHub
        </a>
    </div>
</div>

<script>
function filterImages(category) {
    const items = document.querySelectorAll('.gallery-item');
    const buttons = document.querySelectorAll('.filter-btn');
    
    // Update button states
    buttons.forEach(btn => {
        btn.classList.remove('btn-primary', 'active');
        btn.classList.add('btn-secondary');
    });
    
    document.querySelector(`[data-filter="${category}"]`).classList.add('btn-primary', 'active');
    document.querySelector(`[data-filter="${category}"]`).classList.remove('btn-secondary');
    
    // Filter items
    items.forEach(item => {
        if (category === 'all' || item.dataset.category === category) {
            item.style.display = 'block';
        } else {
            item.style.display = 'none';
        }
    });
}

// Enhanced Lightbox functionality
function openLightbox(imgElement) {
    const lightbox = document.getElementById('lightbox');
    const lightboxImage = document.getElementById('lightboxImage');
    const lightboxTitle = document.getElementById('lightboxTitle');
    const lightboxContent = document.getElementById('lightboxContent');
    const lightboxDate = document.getElementById('lightboxDate');
    
    // Set image
    lightboxImage.src = imgElement.src;
    lightboxImage.alt = imgElement.alt;
    
    // Set title
    const title = imgElement.dataset.title;
    lightboxTitle.textContent = title || '';
    
    // Debug: Log what we're looking for
    console.log('Opening lightbox for:', title);
    
    // Check for poem data
    const poemAuthor = imgElement.dataset.poemAuthor;
    const poemStanzas = imgElement.dataset.poemStanzas;
    
    console.log('Poem author:', poemAuthor);
    console.log('Poem stanzas:', poemStanzas);
    
    if (poemAuthor && poemStanzas) {
        try {
            const stanzas = JSON.parse(poemStanzas);
            console.log('Parsed stanzas:', stanzas);
            
            let poemHTML = `<div class="poem-container">`;
            poemHTML += `<p class="text-sm text-gray-400 mb-4 italic">A poem by ${poemAuthor}</p>`;
            
            stanzas.forEach((stanza, index) => {
                poemHTML += `<div class="stanza stanza-${stanza.number} mb-4">`;
                poemHTML += `<span class="stanza-number text-xs text-gray-500 mr-2">${stanza.number}</span>`;
                const lines = stanza.text.split('\n');
                lines.forEach(line => {
                    if (line.trim()) {
                        poemHTML += `<div class="poem-line text-sm leading-relaxed">${line}</div>`;
                    }
                });
                poemHTML += `</div>`;
            });
            
            poemHTML += `</div>`;
            lightboxContent.innerHTML = poemHTML;
            console.log('Poem HTML added to lightbox');
        } catch (e) {
            console.error("Error parsing poem stanzas:", e);
            const description = imgElement.dataset.description;
            lightboxContent.textContent = description || '';
        }
    } else {
        console.log('No poem data found, using description');
        // Fallback to description
        const description = imgElement.dataset.description;
        lightboxContent.textContent = description || '';
    }
    
    // Set date
    const date = imgElement.dataset.date;
    if (date) {
        lightboxDate.textContent = date;
        lightboxDate.style.display = 'block';
    } else {
        lightboxDate.style.display = 'none';
    }
    
    // Show lightbox
    lightbox.classList.remove('hidden');
    document.body.style.overflow = 'hidden';
    
    // Focus for keyboard navigation
    lightbox.focus();
}

function closeLightbox() {
    document.getElementById('lightbox').classList.add('hidden');
    document.body.style.overflow = 'auto';
}

// Close lightbox with escape key
document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape') {
        closeLightbox();
    }
});

// Prevent lightbox from closing when clicking on the image or caption
document.getElementById('lightboxImage').addEventListener('click', function(e) {
    e.stopPropagation();
});

document.getElementById('lightboxCaption').addEventListener('click', function(e) {
    e.stopPropagation();
});
</script>