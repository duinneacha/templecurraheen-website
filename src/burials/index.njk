---
layout: base.njk
title: "Burial Records"
description: "Complete listing of burial records from Templecurraheen Graveyard"
---

<div class="mb-8">
    <h1 class="text-3xl font-serif mb-4">Burial Records</h1>
    <p class="text-stone-600 mb-6">
        Our database contains {{ burialList.length }} documented burials from the historic Templecurraheen Graveyard. Records are continuously updated as new information becomes available through ongoing research and community contributions.
    </p>
    
    <div class="mobile-controls mb-6">
        <div class="flex flex-col sm:flex-row gap-3 sm:gap-4 mb-4 sm:mb-0">
            <button onclick="sortAlphabetical()" class="btn btn-secondary w-full sm:w-auto">Sort A-Z</button>
            <button onclick="sortByDate()" class="btn btn-secondary w-full sm:w-auto">Sort by Date</button>
            <button onclick="sortByRow()" class="btn btn-secondary w-full sm:w-auto">Sort by Row</button>
        </div>
        <div class="mt-3 sm:mt-0 sm:flex-grow">
            <input type="text" id="searchInput" placeholder="Search by name..." 
                   class="w-full px-3 sm:px-4 py-2 border border-stone-300 rounded-md focus:outline-none focus:ring-2 focus:ring-stone-500 text-sm sm:text-base">
        </div>
    </div>
</div>

<!-- Burial List Table -->
<div class="overflow-x-auto">
    <table class="w-full border-collapse">
        <thead class="bg-stone-100 dark:bg-gray-800">
            <tr>
                <th class="text-left p-3 border-b border-stone-300 dark:border-gray-600 font-semibold text-stone-800 dark:text-white">Name</th>
                <th class="text-left p-3 border-b border-stone-300 dark:border-gray-600 font-semibold text-stone-800 dark:text-white">Date</th>
                <th class="text-left p-3 border-b border-stone-300 dark:border-gray-600 font-semibold text-stone-800 dark:text-white">Age</th>
                <th class="text-left p-3 border-b border-stone-300 dark:border-gray-600 font-semibold text-stone-800 dark:text-white">Row</th>
            </tr>
        </thead>
        <tbody>
            {% for burial in burialList %}
            <tr class="burial-row hover:bg-stone-50 dark:hover:bg-gray-700 cursor-pointer transition-colors" 
                data-name="{{ burial.names | lower }}" 
                data-date="{{ burial.deathDate }}"
                data-location="{{ burial.location | lower }}"
                data-code="{{ burial.code }}"
                data-age="{{ burial.age }}"
                data-inscription="{{ burial.inscription }}"
                onclick="openBurialModal(this)">
                <td class="p-3 border-b border-stone-200 dark:border-gray-600 text-stone-800 dark:text-white font-medium">
                    {{ burial.names }}
                </td>
                <td class="p-3 border-b border-stone-200 dark:border-gray-600 text-stone-600 dark:text-gray-300">
                    {% if burial.deathDate and burial.deathDate != 'Awaited' %}
                        {{ burial.deathDate }}
                    {% else %}
                        <span class="text-stone-400">Unknown</span>
                    {% endif %}
                </td>
                <td class="p-3 border-b border-stone-200 dark:border-gray-600 text-stone-600 dark:text-gray-300">
                    {% if burial.age and burial.age != 'Unknown' %}
                        {{ burial.age }}
                    {% else %}
                        <span class="text-stone-400">Unknown</span>
                    {% endif %}
                </td>
                <td class="p-3 border-b border-stone-200 dark:border-gray-600 text-stone-600 dark:text-gray-300">
                    {% if burial.row %}
                        {{ burial.row }}
                    {% else %}
                        <span class="text-stone-400">-</span>
                    {% endif %}
                </td>
            </tr>
            {% endfor %}
        </tbody>
    </table>
</div>

<!-- Burial Modal -->
<div id="burialModal" class="fixed inset-0 bg-black bg-opacity-50 hidden z-50 flex items-center justify-center p-4">
    <div class="bg-white dark:bg-gray-800 rounded-lg max-w-2xl w-full max-h-[90vh] overflow-y-auto">
        <!-- Modal Header -->
        <div class="flex justify-between items-center p-6 border-b border-stone-200 dark:border-gray-600">
            <h2 id="modalTitle" class="text-2xl font-serif text-stone-800 dark:text-white"></h2>
            <button onclick="closeBurialModal()" 
                    class="text-stone-400 hover:text-stone-600 dark:text-gray-400 dark:hover:text-gray-200 text-2xl font-bold">
                ×
            </button>
        </div>
        
        <!-- Modal Content -->
        <div class="p-6">
            <div id="modalContent" class="space-y-4">
                <!-- Content will be populated by JavaScript -->
            </div>
        </div>
    </div>
</div>

<div class="mt-12 bg-stone-100 dark:bg-gray-800 rounded-lg p-6">
    <h2 class="text-xl font-serif mb-4">About These Records</h2>
    <p class="text-stone-600 dark:text-gray-300 mb-4">
        This burial list represents ongoing research into the historic Templecurraheen Graveyard. Records include information from headstone inscriptions, parish records, and local historical documentation.
    </p>
    <div class="grid md:grid-cols-2 gap-4 text-sm text-stone-600 dark:text-gray-300">
        <div>
            <h3 class="font-semibold mb-2">Record Information</h3>
            <ul class="space-y-1">
                <li>• Grave locations use a grid reference system</li>
                <li>• Ages and dates from headstone inscriptions</li>
                <li>• Some records may be incomplete due to weathering</li>
            </ul>
        </div>
        <div>
            <h3 class="font-semibold mb-2">Contribute Information</h3>
            <ul class="space-y-1">
                <li>• Know additional family details?</li>
                <li>• Have photos of headstones?</li>
                <li>• Found errors or omissions?</li>
            </ul>
            <p class="mt-2">
                <a href="/about/" class="text-stone-700 hover:text-stone-900 dark:text-purple-400 dark:hover:text-purple-300 underline">Contact us to contribute</a>
            </p>
        </div>
    </div>
</div>

<script>
function sortAlphabetical() {
    const tbody = document.querySelector('tbody');
    const rows = Array.from(tbody.children);
    
    rows.sort((a, b) => {
        const nameA = a.dataset.name;
        const nameB = b.dataset.name;
        return nameA.localeCompare(nameB);
    });
    
    tbody.innerHTML = '';
    rows.forEach(row => tbody.appendChild(row));
}

function sortByDate() {
    const tbody = document.querySelector('tbody');
    const rows = Array.from(tbody.children);
    
    rows.sort((a, b) => {
        const dateA = a.dataset.date || '';
        const dateB = b.dataset.date || '';
        
        // Handle various date formats
        const parseDate = (dateStr) => {
            if (!dateStr || dateStr === 'Awaited' || dateStr === 'Unknown') return new Date(0);
            
            // Try to parse different date formats
            const cleaned = dateStr.replace(/[^\d\/\-]/g, '');
            const date = new Date(cleaned);
            return isNaN(date.getTime()) ? new Date(0) : date;
        };
        
        return parseDate(dateA) - parseDate(dateB);
    });
    
    tbody.innerHTML = '';
    rows.forEach(row => tbody.appendChild(row));
}

function sortByRow() {
    const tbody = document.querySelector('tbody');
    const rows = Array.from(tbody.children);
    
    rows.sort((a, b) => {
        const cellsA = a.querySelectorAll('td');
        const cellsB = b.querySelectorAll('td');
        const rowA = cellsA[3] ? cellsA[3].textContent.trim() : '';
        const rowB = cellsB[3] ? cellsB[3].textContent.trim() : '';
        
        // Handle empty or dash values
        if (rowA === '-' || rowA === '') rowA = '999'; // Put empty rows at the end
        if (rowB === '-' || rowB === '') rowB = '999';
        
        // Try to parse as numbers first, then fall back to string comparison
        const numA = parseInt(rowA);
        const numB = parseInt(rowB);
        
        if (!isNaN(numA) && !isNaN(numB)) {
            return numA - numB;
        } else {
            return rowA.localeCompare(rowB);
        }
    });
    
    tbody.innerHTML = '';
    rows.forEach(row => tbody.appendChild(row));
}

// Search functionality
document.getElementById('searchInput').addEventListener('input', function(e) {
    const searchTerm = e.target.value.toLowerCase();
    const rows = document.querySelectorAll('.burial-row');
    
    rows.forEach(row => {
        const name = row.dataset.name;
        const location = row.dataset.location;
        const text = row.textContent.toLowerCase();
        
        if (name.includes(searchTerm) || location.includes(searchTerm) || text.includes(searchTerm)) {
            row.style.display = 'table-row';
        } else {
            row.style.display = 'none';
        }
    });
});

// Modal functions
function openBurialModal(row) {
    const modal = document.getElementById('burialModal');
    const title = document.getElementById('modalTitle');
    const content = document.getElementById('modalContent');
    
    // Get data from the row
    const name = row.querySelector('td:first-child').textContent.trim();
    const date = row.dataset.date;
    const age = row.dataset.age;
    const location = row.dataset.location;
    const code = row.dataset.code;
    const inscription = row.dataset.inscription;
    
    // Get row from the table structure
    const cells = row.querySelectorAll('td');
    const rowValue = cells[3] ? cells[3].textContent.trim() : '';
    
    // Set title
    title.textContent = name;
    
    // Build content
    let contentHTML = '';
    
    if (date && date !== 'Awaited') {
        contentHTML += `<div><strong>Death Date:</strong> ${date}</div>`;
    }
    
    if (age && age !== 'Unknown') {
        contentHTML += `<div><strong>Age:</strong> ${age}</div>`;
    }
    
    if (location) {
        contentHTML += `<div><strong>Grave Location:</strong> ${location}</div>`;
    }
    
    if (rowValue && rowValue !== '-') {
        contentHTML += `<div><strong>Row:</strong> ${rowValue}</div>`;
    }
    
    if (code) {
        contentHTML += `<div><strong>Record Code:</strong> ${code}</div>`;
    }
    
    if (inscription && inscription.length > 0) {
        contentHTML += `<div class="mt-4"><strong>Inscription:</strong><br><span class="italic text-stone-600 dark:text-gray-300">${inscription}</span></div>`;
    }
    
    content.innerHTML = contentHTML;
    modal.classList.remove('hidden');
    document.body.style.overflow = 'hidden';
}

function closeBurialModal() {
    const modal = document.getElementById('burialModal');
    modal.classList.add('hidden');
    document.body.style.overflow = 'auto';
}

// Close modal when clicking outside
document.getElementById('burialModal').addEventListener('click', function(e) {
    if (e.target === this) {
        closeBurialModal();
    }
});

// Close modal with escape key
document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape') {
        closeBurialModal();
    }
});
</script>